###########################################################
# asm log                           # 
###########################################################
#profiler.asm.log=/usr/local/test/server/asm.log
#profiler.agent.info.log=/usr/local/test/server/agent.log
kafka.brokers=192.168.26.183:9092
kafka.topic=apm_chain_test

###########################################################
# Profiler Global Configuration                           # 
###########################################################
profiler.enable=true

profiler.interceptorregistry.size=8192
profiler.jvm.collect.interval=1000

# Allow to add detailed collector's metrics
profiler.jvm.collect.detailed.metrics=true

# Allow sampling.
profiler.sampling.enable=true

# 1 out of n transactions will be sampled where n is the rate. (1: 100%)
profiler.sampling.rate=1

# Allow buffering when flushing span to IO.
profiler.io.buffering.enable=true

# How many spans to store if buffering enabled.
profiler.io.buffering.buffersize=20

# Capacity of the SpanDataSender write queue.
profiler.spandatasender.write.queue.size=5120
profiler.spandatasender.chunk.size=16384

# Trace Agent active thread info.
profiler.pinpoint.activethread=true

## Call Stack
# Set max depth, if -1 is unlimited and min is 2.
profiler.callstack.max.depth=1024

# weather or not to propagate exceptions occurred at interceptor
profiler.interceptor.exception.propagate=false
###########################################################
# application type                                        # 
###########################################################
#profiler.applicationservertype=TOMCAT
#profiler.applicationservertype=BLOC

###########################################################
# application type detect order                           # 
###########################################################
profiler.type.detect.order=

profiler.plugin.disable=

###########################################################
# user defined classes                                    # 
###########################################################
# Specify classes and methods you want to profile here.

# Needs to be a comma separated list of fully qualified class names, or fully qualified package names with wild card class.
profiler.include=
# Ex: foo.bar.MyClass, foo.baz.*

# Needs to be a comma separated list of fully qualified method names. Wild card not supported.
profiler.entrypoint=
# Ex: foo.bar.MyClass.myMethod, foo.bar.MyClass.anotherMethod


###########################################################
# JDBC                                                    # 
###########################################################
# Profile JDBC drivers.
profiler.jdbc=true
#whether cache sql or not
profiler.jdbc.rawsql=true
# Size of cache. Fixed maximum.
profiler.jdbc.sqlcachesize=1024
# trace bindvalues for PreparedStatements
profiler.jdbc.tracesqlbindvalue=true
# Maximum bindvalue size.
profiler.jdbc.maxsqlbindvaluesize=1024

###########################################################
# MYSQL                                                    # 
###########################################################
# Profile MySQL.
profiler.jdbc.mysql=true
# Allow profiling of setautocommit.
profiler.jdbc.mysql.setautocommit=true
# Allow profiling of commit.
profiler.jdbc.mysql.commit=true
# Allow profiling of rollback.
profiler.jdbc.mysql.rollback=true
# Trace bindvalues for MySQL PreparedStatements (overrides profiler.jdbc.tracesqlbindvalue)
profiler.jdbc.mysql.tracesqlbindvalue=true
