input {
        beats {
                port=>5044
        }
}
filter {
        if "kafka_stream" in [tags] {
                ruby {
                        #使用ruby插件，event getapi 获取分片字段值 存放到@metadata中是为了不在output显示出kafka_message_key字段
，虽然是将message放到kafka中，不使用 @metadata也不要紧
                        code => '
                                event.set("[@metadata][kafka_message_key]",event.get(event.get("[fields][key]")))
                                event.set("[@metadata][kafka_topic]",event.get("[fields][topic]"))
                                event.set("[@metadata][message]",event.get("[message]"))
                        '
                }
                json {
                        source => "message"
                        remove_field => ["message","fields","host","@timestamp","@version","offset","type","source","input_type","beat","tags"]
                }
        } else {
                grok {
                        match => {"message" => "%{TIMESTAMP_ISO8601:logdate}"}
                }
                date {
                        match => ["logdate", "yyyy-MM-dd HH:mm:ss.SSS"]
                        target => "@timestamp"
                        locale => "en"
                }
                mutate {
                        remove_field => ["logdate"]
                }
        }
}
output {
        if [@metadata][kafka_topic] {
                kafka {
                        bootstrap_servers => ["192.168.26.183:9092"]
                        codec => plain {
                                format => "%{[@metadata][message]}"
                        }
                        message_key => "%{[@metadata][kafka_message_key]}"
                        topic_id => "%{[@metadata][kafka_topic]}"
                }
                elasticsearch {
                        custom_headers => {"Content-Type"=>"application/json"}
                        index => "gb_apm_trace"
                        document_type => "trace"
                        hosts => ["192.168.26.186:9200"]
                }
        }else {
                elasticsearch {
                        hosts => ["192.168.26.186:9200"]
                }
        }
}
